// Bun Snapshot v1, https://bun.sh/docs/test/snapshots

exports[`snapshot: help and type help (no args) output 1`] = `
"Built-in commands:
alias        Define or display aliases
b            Run build via bun run build
bb           Run build script via bun run build
bd           Run dev via bun run dev
bf           Format code using pickier (or prettier)
bg           Resume suspended jobs in the background
bi           Install dependencies via bun install
bl           Lint code using pickier (or eslint)
bookmark     Manage directory bookmarks and navigate quickly
bm           Manage directory bookmarks and navigate quickly
br           Run script via bun run (default: start)
mark         Manage directory bookmarks and navigate quickly
jump         Manage directory bookmarks and navigate quickly
builtin      Run a shell builtin explicitly
c            Clear the screen
cd           Change the current directory
command      Run a command ignoring functions and aliases
code         Open the current directory in Visual Studio Code
copyssh      Copy ~/.ssh/id_ed25519.pub to clipboard when available, else print
dirs         Display the directory stack
disown       Remove jobs from the job table
dotfiles     Open $DOTFILES in your preferred editor ($EDITOR) or default to VS Code
echo         Display text
emptytrash   Empty the user Trash on macOS (no sudo). Fails gracefully elsewhere.
eval         Concatenate arguments and evaluate as a command
env          Print or run a command in a modified environment
exec         Execute a command
exit         Exit the shell
export       Set environment variables
false        Return unsuccessful exit status
fg           Bring a background job to the foreground
ft           Fix/Unstick macOS Touch Bar when it freezes
getopts      Parse positional parameters as options
hash         Remember or display command locations
help         Display help information
hide         Hide hidden files in Finder (macOS)
history      Display or manipulate the command history
ip           Show public IP address via OpenDNS diagnostic service
jobs         List background jobs
kill         Send a signal to a process or job
library      cd to $HOME/Library
localip      Show local IP addresses (IPv4/IPv6) from ifconfig output
pstorm       Open the current directory in PhpStorm
popd         Pop directory from stack and change to it
printf       Format and print data
pushd        Save current directory on stack and change to DIR
pwd          Print the current working directory
read         Read a line from standard input
reload       Reload configuration, hooks, and plugins (same as sourcing shell config)
reloaddns    Flush DNS cache on macOS
reload       Reload configuration, hooks, and plugins (same as sourcing shell config)
set          Set shell options and positional parameters or display variables
show         Show hidden files in Finder (macOS)
shrug        Copy ¯\\_(ツ)_/¯ to clipboard (when available) or print it
source       Execute commands from a file in the current shell environment
source       Execute commands from a file in the current shell environment
test         Evaluate conditional expressions
[            Evaluate conditional expressions (alias for test)
time         Measure command execution time
timeout      Run a command with a time limit
times        Print accumulated user and system times
trap         Trap signals and other events
true         Return successful exit status
type         Display the type of a command
umask        Get or set the file mode creation mask
unalias      Remove aliases
unset        Unset (remove) shell variables or functions
wait         Wait for background jobs or PIDs to finish
web          cd to $HOME/Code
which        Show the full path of commands
wip          Create a work-in-progress commit and optionally push it
return       Return from a function or script
break        Break out of loops
continue     Continue to next iteration of loop
local        Create local variables in functions
readonly     Mark variables as read-only
declare      Declare variables and give them attributes
Use 'help <command>' for detailed information."
`;

exports[`snapshot: help and type help printf output 1`] = `
"printf: Format and print data
Usage: printf format [arguments...]
Examples:
  printf "%10s" hello
  printf "%-8.3f" 3.14159
  printf "%x %X %o" 255 255 8
  printf %b "line\\nbreak""
`;

exports[`snapshot: help and type type builtins and external 1`] = `
"printf is a shell builtin
---
env is a shell builtin
---
echo is a shell builtin"
`;
